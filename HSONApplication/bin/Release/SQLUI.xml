<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SQLUI</name>
    </assembly>
    <members>
        <member name="M:SQLUI.SQLControl.AddRowAsync(System.String,System.Object[],System.Threading.CancellationToken)">
            <summary>
            新增單筆資料列至指定資料表。
            </summary>
            <param name="tableName">資料表名稱，若為 null 或空字串則使用預設 TableName。</param>
            <param name="value">單筆資料列的欄位值陣列。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>受影響的資料筆數。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.AddRowsAsync(System.String,System.Collections.Generic.List{System.Object[]},System.Threading.CancellationToken)">
            <summary>
            新增多筆資料列至指定資料表。
            </summary>
            <param name="tableName">資料表名稱，若為 null 或空字串則使用預設 TableName。</param>
            <param name="values">多筆資料列的欄位值集合。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>受影響的資料筆數。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.UpdateRowAsync(System.String,System.Object[],System.Threading.CancellationToken)">
            <summary>
            更新單筆資料列（依 GUID 比對）
            </summary>
            <param name="tableName">資料表名稱，若為 null 或空字串則使用預設 TableName。</param>
            <param name="value">單筆完整資料列（含 GUID 與所有欄位值）。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>受影響的資料筆數。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.UpdateRowsAsync(System.String,System.Collections.Generic.List{System.Object[]},System.Threading.CancellationToken)">
            <summary>
            更新多筆資料列（依 GUID 比對）
            </summary>
            <param name="tableName">資料表名稱，若為 null 或空字串則使用預設 TableName。</param>
            <param name="values">多筆完整資料列（含 GUID 與所有欄位值）。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>受影響的資料筆數。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.DeleteRowAsync(System.String,System.Object[],System.Threading.CancellationToken)">
            <summary>
            刪除單筆資料列（依 GUID 比對）。
            </summary>
            <param name="tableName">資料表名稱，若為 null 或空字串則使用預設 TableName。</param>
            <param name="value">單筆資料列（GUID 須存在於索引 0）。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>受影響的資料筆數。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.DeleteRowsAsync(System.String,System.Collections.Generic.List{System.Object[]},System.Threading.CancellationToken)">
            <summary>
            刪除多筆資料列（依 GUID 比對）。
            </summary>
            <param name="tableName">資料表名稱，若為 null 或空字串則使用預設 TableName。</param>
            <param name="rows">多筆資料列（每筆的 GUID 須存在於索引 0）。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>受影響的資料筆數。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.WriteCommandAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            執行 SQL 指令並回傳查詢結果。
            </summary>
            <param name="commandText">欲執行的 SQL 查詢字串。</param>
            <param name="ct">取消作業的 CancellationToken。</param>
            <returns>查詢結果集合，每筆為 object[]。</returns>
            <remarks>
            此方法使用 DataReader 逐筆讀取資料，並將每列存入 object[]。
            </remarks>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor(System.String,System.String,System.String,System.String,System.String,System.UInt32,MySql.Data.MySqlClient.MySqlSslMode)">
            <summary>
            初始化 SQLControl 類別的新實例，使用指定的伺服器、資料庫、表格名稱、使用者ID、密碼、連接埠和 SSL 模式。
            </summary>
            <param name="Server">伺服器名稱。</param>
            <param name="Database">資料庫名稱。</param>
            <param name="TableName">表格名稱。</param>
            <param name="UserID">使用者ID。</param>
            <param name="Password">密碼。</param>
            <param name="Port">連接埠號。</param>
            <param name="SSLMode">SSL 模式。</param>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor(System.String,System.String,System.String,System.String,System.UInt32,MySql.Data.MySqlClient.MySqlSslMode)">
            <summary>
            初始化 SQLControl 類別的新實例，使用指定的伺服器、資料庫、使用者ID、密碼、連接埠和 SSL 模式。
            </summary>
            <param name="Server">伺服器名稱。</param>
            <param name="Database">資料庫名稱。</param>
            <param name="UserID">使用者ID。</param>
            <param name="Password">密碼。</param>
            <param name="Port">連接埠號。</param>
            <param name="SSLMode">SSL 模式。</param>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor(System.String,System.String,System.String,System.String,MySql.Data.MySqlClient.MySqlSslMode)">
            <summary>
            初始化 SQLControl 類別的新實例，使用指定的伺服器、資料庫、使用者ID、密碼和 SSL 模式。
            </summary>
            <param name="Server">伺服器名稱。</param>
            <param name="Database">資料庫名稱。</param>
            <param name="UserID">使用者ID。</param>
            <param name="Password">密碼。</param>
            <param name="SSLMode">SSL 模式。</param>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor(System.String,System.String,System.String,System.String,System.UInt32)">
            <summary>
            初始化 SQLControl 類別的新實例，使用指定的伺服器、資料庫、使用者ID、密碼和連接埠。
            </summary>
            <param name="Server">伺服器名稱。</param>
            <param name="Database">資料庫名稱。</param>
            <param name="UserID">使用者ID。</param>
            <param name="Password">密碼。</param>
            <param name="Port">連接埠號。</param>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor(SQLUI.Table)">
            <summary>
            初始化 SQLControl 類別的新實例，使用指定的 Table 物件。
            </summary>
            <param name="table">Table 物件，包含伺服器、資料庫、使用者ID和密碼。</param>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            初始化 SQLControl 類別的新實例，使用指定的伺服器、資料庫、使用者ID和密碼。
            </summary>
            <param name="Server">伺服器名稱。</param>
            <param name="Database">資料庫名稱。</param>
            <param name="UserID">使用者ID。</param>
            <param name="Password">密碼。</param>
        </member>
        <member name="M:SQLUI.SQLControl.#ctor">
            <summary>
            初始化 SQLControl 類別的新實例。
            </summary>
        </member>
        <member name="M:SQLUI.SQLControl.Set_Config(System.String,System.String)">
            <summary>
            設定伺服器和資料庫。
            </summary>
            <param name="server">伺服器名稱。</param>
            <param name="dbName">資料庫名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Set_Database(System.String)">
            <summary>
            設定資料庫。
            </summary>
            <param name="Database">資料庫名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Set_Connection(System.String,System.String,System.String,System.UInt32,MySql.Data.MySqlClient.MySqlSslMode)">
            <summary>
            設定連接資訊。
            </summary>
            <param name="Server">伺服器名稱。</param>
            <param name="UserID">使用者ID。</param>
            <param name="Password">密碼。</param>
            <param name="Port">連接埠號。</param>
            <param name="SSLMode">SSL 模式。</param>
        </member>
        <member name="M:SQLUI.SQLControl.TestConnection">
            <summary>
            測試資料庫連接。
            </summary>
            <returns>如果連接成功，則返回 true；否則返回 false。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetConcetStatu">
            <summary>
            獲取連接狀態。
            </summary>
            <returns>如果連接成功，則返回 true；否則返回 false。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetServer">
            <summary>
            獲取伺服器名稱。
            </summary>
            <returns>如果連接成功，則返回伺服器名稱；否則返回 null。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetDatabase">
            <summary>
            獲取資料庫名稱。
            </summary>
            <returns>如果連接成功，則返回資料庫名稱；否則返回 null。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetUserID">
            <summary>
            獲取使用者ID。
            </summary>
            <returns>如果連接成功，則返回使用者ID；否則返回 null。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetPassword">
            <summary>
            獲取密碼。
            </summary>
            <returns>如果連接成功，則返回密碼；否則返回 null。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetPort">
            <summary>
            獲取連接埠號。
            </summary>
            <returns>如果連接成功，則返回連接埠號；否則返回 null。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.GetSSLMode">
            <summary>
            獲取 SSL 模式。
            </summary>
            <returns>如果連接成功，則返回 SSL 模式；否則返回 null。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Get_All_DataBase_Name">
            <summary>
            獲取所有資料庫的名稱。
            </summary>
            <returns>包含所有資料庫名稱的列表。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Create_DataBase(System.String)">
            <summary>
            創建資料庫。
            </summary>
            <param name="Name">資料庫名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Create_DataBase(System.String,System.String)">
            <summary>
            創建資料庫，使用指定的編碼。
            </summary>
            <param name="Name">資料庫名稱。</param>
            <param name="Encoding">資料庫編碼。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Drop_DataBase(System.String)">
            <summary>
            刪除資料庫。
            </summary>
            <param name="Name">資料庫名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Import_DataBase(System.String,System.String,System.String,System.String)">
            <summary>
            匯入資料庫。
            </summary>
            <param name="databaseName">資料庫名稱。</param>
            <param name="fullfilePath">資料庫檔案完整路徑。</param>
            <param name="root_password">根使用者密碼。</param>
            <param name="mysqlDumpPath">MySQL Dump 工具路徑。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Import_Table(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            匯入資料表。
            </summary>
            <param name="databaseName">資料庫名稱。</param>
            <param name="TableName">資料表名稱。</param>
            <param name="fullfilePath">資料表檔案完整路徑。</param>
            <param name="root_password">根使用者密碼。</param>
            <param name="mysqlDumpPath">MySQL Dump 工具路徑。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Export_DataBase(System.String,System.String,System.String,System.String)">
            <summary>
            匯出資料庫。
            </summary>
            <param name="databaseName">資料庫名稱。</param>
            <param name="fullfilePath">匯出檔案的完整路徑。</param>
            <param name="root_password">根使用者密碼。</param>
            <param name="mysqlDumpPath">MySQL Dump 工具路徑。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Export_Table(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            匯出資料表。
            </summary>
            <param name="databaseName">資料庫名稱。</param>
            <param name="TableName">資料表名稱。</param>
            <param name="fullfilePath">匯出檔案的完整路徑。</param>
            <param name="root_password">根使用者密碼。</param>
            <param name="mysqlDumpPath">MySQL Dump 工具路徑。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Set_Table_Name(System.String,System.String)">
            <summary>
            設置資料表名稱。
            </summary>
            <param name="Old_Name">舊的資料表名稱。</param>
            <param name="New_Name">新的資料表名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Set_Columm_Name(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            設置欄位名稱。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="Old_Name">舊的欄位名稱。</param>
            <param name="New_Name">新的欄位名稱。</param>
            <param name="valueType">欄位類型。</param>
            <param name="TypeLen">欄位長度。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Add_Column(System.String,System.String,System.String)">
            <summary>
            添加欄位。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="ColumnName">欄位名稱。</param>
            <param name="ColumnType">欄位類型。</param>
            <returns>如果欄位已存在，返回 -1；否則返回 1。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Add_Column(System.String,System.String,System.String,SQLUI.Table.IndexType,System.String)">
            <summary>
            添加欄位，並設置索引類型。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="ColumnName">欄位名稱。</param>
            <param name="ColumnType">欄位類型。</param>
            <param name="indexType">索引類型。</param>
            <param name="AfterColumnName">添加到指定欄位之後。</param>
            <returns>如果欄位已存在，返回 -1；否則返回 1。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Add_Column(System.String,System.String,System.String,System.Int32)">
            <summary>
            添加欄位，並指定欄位索引位置。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="ColumnName">欄位名稱。</param>
            <param name="ColumnType">欄位類型。</param>
            <param name="index">索引位置。</param>
            <returns>如果欄位已存在，返回 -1；否則返回 1。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Add_Column(System.String,System.String,System.String,SQLUI.Table.IndexType,System.Int32)">
            <summary>
            添加欄位，設置索引類型並指定欄位索引位置。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="ColumnName">欄位名稱。</param>
            <param name="ColumnType">欄位類型。</param>
            <param name="indexType">索引類型。</param>
            <param name="index">索引位置。</param>
            <returns>如果欄位已存在，返回 -1；否則返回 1。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Add_Column(System.String,System.String,System.String,System.String)">
            <summary>
            添加欄位，並指定欄位之後的位置。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="ColumnName">欄位名稱。</param>
            <param name="ColumnType">欄位類型。</param>
            <param name="AfterColumnName">添加到指定欄位之後。</param>
            <returns>返回 1 表示成功。</returns>
        </member>
        <member name="M:SQLUI.SQLControl.Drop_Column(System.String,System.String)">
            <summary>
            刪除欄位。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="ColumnName">欄位名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Modify_After_Column(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            修改欄位位置，將欄位移動到指定欄位之後。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="Mod_ColumnName">要修改的欄位名稱。</param>
            <param name="Mod_ColumnType">要修改的欄位類型。</param>
            <param name="Mod_DataLen">要修改的欄位長度。</param>
            <param name="Target_ColumnName">目標欄位名稱。</param>
        </member>
        <member name="M:SQLUI.SQLControl.Modify_First_Column(System.String,System.String,System.String,System.String)">
            <summary>
            修改欄位位置，將欄位移動到表的第一欄。
            </summary>
            <param name="TableName">資料表名稱。</param>
            <param name="Mod_ColumnName">要修改的欄位名稱。</param>
            <param name="Mod_ColumnType">要修改的欄位類型。</param>
            <param name="Mod_DataLen">要修改的欄位長度。</param>
        </member>
        <member name="M:SQLUI.SQLControl.WtrteCommandAsync(System.String)">
            <summary>
            非同步執行 SQL Command (不回傳結果集)
            </summary>
        </member>
        <member name="M:SQLUI.SQLControl.WtrteCommandAndExecuteReaderAsync(System.String)">
            <summary>
            非同步執行 SQL Command，並回傳 DataTable
            </summary>
        </member>
        <member name="M:SQLUI.Table.#ctor(System.Type)">
            <summary>
            建立 Table (Class 版本)
            </summary>
        </member>
        <member name="M:SQLUI.Table.AddColumnList(System.String,System.String,System.String)">
            <summary>
            新增欄位 (字串版本)
            </summary>
            <param name="Name">欄位名稱</param>
            <param name="TypeName">型別名稱 (如 VARCHAR(50), TEXT, DATETIME)</param>
            <param name="IndexType">索引類型 (PRIMARY, UNIQUE, INDEX, NONE)</param>
        </member>
        <member name="M:SQLUI.Table.AddColumnList(System.String,System.String,System.UInt32,System.String)">
            <summary>
            新增欄位 (字串版本，帶長度)
            </summary>
            <param name="Name">欄位名稱</param>
            <param name="BaseType">型別 (VARCHAR / DATETIME / TEXT)</param>
            <param name="Length">長度 (僅針對 VARCHAR 用)</param>
            <param name="IndexType">索引類型</param>
        </member>
        <member name="F:SQLUI.SQL_DataGridView.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:SQLUI.SQL_DataGridView.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:SQLUI.SQL_DataGridView.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
    </members>
</doc>
